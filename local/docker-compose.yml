version: '2.1'

services:
  storedb:
    image: postgres:9.6
    container_name: storedb
    ports:
    - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_DB: "store"
      POSTGRES_USER: "adrrriannn"
      POSTGRES_PASSWORD: "adrrriannn"
#    volumes:
#    - ${PWD}/db-scripts:/docker-entrypoint-initdb.d
    networks:
    - store-network
  messagebroker:
    image: spotify/kafka
    container_name: kafka
    ports:
    - "9092:9092"
    - "2181:2181"
    environment:
      TEST: "256"
    networks:
    - store-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    container_name: elasticsearch
    ports:
    - "9200:9200"
    - "9300:9300"
    networks:
    - store-network
#  notification:
#    image: store/server/notification
#    container_name: notification
#    ports:
#    - "9001:8080"
#    networks:
#    - store-network
#  order:
#    image: store/server/order
#    container_name: order
#    depends_on:
#    - storedb
#    ports:
#    - "9002:8080"
#    networks:
#    - store-network
#  product:
#    image: store/server/product
#    container_name: product
#    depends_on:
#    - storedb
#    ports:
#    - "9003:8080"
#    networks:
#    - store-network
#  indexing:
#    image: store/server/indexing
#    container_name: indexing
#    ports:
#    - "9004:8080"
#    networks:
#    - store-network
networks:
  store-network:
    driver: bridge
